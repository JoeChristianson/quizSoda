[{"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\quizSoda\\client\\src\\index.js":"1","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\quizSoda\\client\\src\\App.js":"2","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\quizSoda\\client\\src\\reportWebVitals.js":"3","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\quizSoda\\client\\src\\utils\\auth.js":"4","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\quizSoda\\client\\src\\pages\\Register\\index.js":"5","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\quizSoda\\client\\src\\utils\\mutations.js":"6","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\quizSoda\\client\\src\\pages\\Home\\index.js":"7","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\quizSoda\\client\\src\\pages\\Login\\index.js":"8"},{"size":500,"mtime":1654725602183,"results":"9","hashOfConfig":"10"},{"size":1853,"mtime":1654733460985,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1654721598247,"results":"12","hashOfConfig":"10"},{"size":995,"mtime":1654723067570,"results":"13","hashOfConfig":"10"},{"size":4522,"mtime":1654729298363,"results":"14","hashOfConfig":"10"},{"size":462,"mtime":1654736592038,"results":"15","hashOfConfig":"10"},{"size":103,"mtime":1654725888517,"results":"16","hashOfConfig":"10"},{"size":3510,"mtime":1654733670822,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"dkzj4c",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\quizSoda\\client\\src\\index.js",[],["36","37"],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\quizSoda\\client\\src\\App.js",["38"],"import React from \"react\"\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport './App.css';\nimport auth from \"./utils/auth\";\nimport Register from \"./pages/Register\";\nimport Home from \"./pages/Home\"\nimport Login from \"./pages/Login\"\n\n\nconst httpLink = createHttpLink({\n  uri: '/graphql'\n});\nconsole.log(httpLink)\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  // link: authLink.concat(httpLink),\n  uri: 'http://localhost:3001/graphql',\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n\n  const token = auth.getToken()\n\n  console.log(\"token\",token)\n\nfunction choose(){if (token){\n  return(<Home/>)\n}else{\n  return(<Login/>)\n}\n}\n\nreturn (\n  <ApolloProvider client={client}>\n    <Router>\n      <div className=\"flex-column justify-flex-start min-100-vh\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path='/register'\n              element={<Register />}\n            />\n            <Route \n              path=\"/*\" \n              element={choose()} \n            />\n          </Routes>\n        </div>\n      </div>\n    </Router>\n  </ApolloProvider>\n);\n}\n\nexport default App;\n","C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\quizSoda\\client\\src\\reportWebVitals.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\quizSoda\\client\\src\\utils\\auth.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\quizSoda\\client\\src\\pages\\Register\\index.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\quizSoda\\client\\src\\utils\\mutations.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\quizSoda\\client\\src\\pages\\Home\\index.js",[],"C:\\Users\\jcfar\\OneDrive\\Desktop\\big\\quizSoda\\client\\src\\pages\\Login\\index.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":22,"column":7,"nodeType":"45","messageId":"46","endLine":22,"endColumn":15},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'authLink' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]